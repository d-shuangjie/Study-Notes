import axios from 'axios'

let cancel
let requestUrls = []
const CancelToken = axios.CancelToken
let removeRequest = (config) => {
  if (config) {
    var url = config.url + '&' + config.method
    for (let index in requestUrls) {
      if (requestUrls[index] === url) {
        requestUrls.splice(index, 1)
      }
    }
  }
}

let isRepeat = (config) => {
  var url = config.url + '&' + config.method
  if (requestUrls.includes(url)) {
    return true
  }
  return false
}

const service = axios.create({
  baseURL: '',
  timeout: 10000,
  withCredentials: true
})

// 添加请求拦截器
service.interceptors.request.use(config => {
  config.cancelToken = new CancelToken((c) => {
    cancel = c
  })
  if (isRepeat(config)) {
    cancel('Abort the repeat request.')
  } else {
    requestUrls.push(config.url + '&' + config.method)
  }
  return config
}, error => {
  return Promise.reject(error)
})

service.interceptors.response.use(function (response) {
  removeRequest(response.config)

  return response.data
}, function (error) {
  removeRequest(error.config)
  return Promise.reject(error)
})
